//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

package com.openbravo.beans;

import javax.swing.*;
import java.awt.*;

public class JPasswordDialog extends JDialog {

    // private static ResourceBundle m_Intl;
    private static LocaleResources m_resources;

    private String m_sPassword;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JPanel jPanelGrid;
    private JButton jcmdCancel;
    private JButton jcmdOK;
    private com.openbravo.editor.JEditorKeys m_jKeys;
    private JPanel m_jPanelTitle;
    private com.openbravo.editor.JEditorPassword m_jpassword;
    private JLabel m_lblMessage;

    /**
     * Creates new form JCalendarDialog
     */
    public JPasswordDialog(Frame parent, boolean modal) {
        super(parent, modal);
        init();
    }

    /**
     * Creates new form JCalendarDialog
     */
    public JPasswordDialog(Dialog parent, boolean modal) {
        super(parent, modal);
        init();
    }

    private static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    }

    public static String showEditPassword(Component parent, String title) {
        return showEditPassword(parent, title, null, null);
    }

    public static String showEditPassword(Component parent, String title, String message) {
        return showEditPassword(parent, title, message, null);
    }

    public static String showEditPassword(Component parent, String title, String message, Icon icon) {

        Window window = getWindow(parent);

        JPasswordDialog myMsg;
        if (window instanceof Frame) {
            myMsg = new JPasswordDialog((Frame) window, true);
        } else {
            myMsg = new JPasswordDialog((Dialog) window, true);
        }

        myMsg.setTitle(title, message, icon);
        myMsg.setVisible(true);
        return myMsg.m_sPassword;
    }

    private void init() {

        if (m_resources == null) {
            m_resources = new LocaleResources();
            m_resources.addBundleName("beans_messages");
        }

        initComponents();
        getRootPane().setDefaultButton(jcmdOK);

        m_jpassword.addEditorKeys(m_jKeys);
        m_jpassword.reset();
        m_jpassword.activate();

        m_jPanelTitle.setBorder(RoundedBorder.createGradientBorder());

        m_sPassword = null;
    }

    private void setTitle(String title, String message, Icon icon) {
        setTitle(title);
        m_lblMessage.setText(message);
        m_lblMessage.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        jcmdOK = new JButton();
        jcmdCancel = new JButton();
        jPanel2 = new JPanel();
        jPanelGrid = new JPanel();
        jPanel3 = new JPanel();
        m_jKeys = new com.openbravo.editor.JEditorKeys();
        jPanel4 = new JPanel();
        m_jpassword = new com.openbravo.editor.JEditorPassword();
        m_jPanelTitle = new JPanel();
        m_lblMessage = new JLabel();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeWindow(evt);
            }
        });

        jPanel1.setLayout(new FlowLayout(FlowLayout.RIGHT));

        jcmdOK.setIcon(new ImageIcon(getClass().getResource("/com/openbravo/images/button_ok.png"))); // NOI18N
        jcmdOK.setText(m_resources.getString("button.ok")); // NOI18N
        jcmdOK.setHideActionText(true);
        jcmdOK.setMargin(new Insets(8, 16, 8, 16));
        jcmdOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmdOKActionPerformed(evt);
            }
        });
        jPanel1.add(jcmdOK);

        jcmdCancel.setIcon(new ImageIcon(getClass().getResource("/com/openbravo/images/button_cancel.png"))); // NOI18N
        jcmdCancel.setText(m_resources.getString("button.cancel")); // NOI18N
        jcmdCancel.setMargin(new Insets(8, 16, 8, 16));
        jcmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmdCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jcmdCancel);

        getContentPane().add(jPanel1, BorderLayout.SOUTH);

        jPanel2.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel2.setLayout(new BorderLayout());

        jPanel3.setLayout(new BoxLayout(jPanel3, BoxLayout.Y_AXIS));
        jPanel3.add(m_jKeys);

        jPanel4.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel4.setLayout(new BorderLayout());
        jPanel4.add(m_jpassword, BorderLayout.CENTER);

        jPanel3.add(jPanel4);

        jPanelGrid.add(jPanel3);

        jPanel2.add(jPanelGrid, BorderLayout.CENTER);

        getContentPane().add(jPanel2, BorderLayout.CENTER);

        m_jPanelTitle.setLayout(new BorderLayout());

        m_lblMessage.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.darkGray), BorderFactory.createEmptyBorder(5, 5, 5, 5)));
        m_jPanelTitle.add(m_lblMessage, BorderLayout.CENTER);

        getContentPane().add(m_jPanelTitle, BorderLayout.NORTH);

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 277) / 2, (screenSize.height - 428) / 2, 277, 428);
    }// </editor-fold>//GEN-END:initComponents

    private void jcmdOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdOKActionPerformed

        m_sPassword = m_jpassword.getPassword();
        setVisible(false);
        dispose();

    }//GEN-LAST:event_jcmdOKActionPerformed

    private void jcmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmdCancelActionPerformed

        setVisible(false);
        dispose();

    }//GEN-LAST:event_jcmdCancelActionPerformed

    private void closeWindow(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeWindow

        setVisible(false);
        dispose();

    }//GEN-LAST:event_closeWindow
    // End of variables declaration//GEN-END:variables

}
